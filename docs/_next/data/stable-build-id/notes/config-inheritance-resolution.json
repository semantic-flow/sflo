{"pageProps":{"note":{"id":"config-inheritance-resolution","title":"inheritable config flow","desc":"How InheritableNodeConfig inheritance works in Semantic Flow","updated":1755916057245,"created":1754285606247,"custom":{},"fname":"resource.node-component.flow.node-config.inheritable","type":"note","vault":{"fsPath":"documentation","selfContained":false,"name":"sflo"},"contentHash":"5f1616ffa212b5c3dc99e64c0ed404f1","links":[{"from":{"fname":"concept.summary","id":"concept-summary","vaultName":"sflo"},"type":"backlink","position":{"start":{"line":157,"column":3,"offset":8209},"end":{"line":157,"column":59,"offset":8265},"indent":[]},"value":"resource.node-component.flow.node-config.inheritable"},{"from":{"fname":"folder._config-inheritable-flow","id":"nokx5o047yld6voaxnx8tmw","vaultName":"sflo"},"type":"backlink","position":{"start":{"line":2,"column":36,"offset":36},"end":{"line":2,"column":92,"offset":92},"indent":[]},"value":"resource.node-component.flow.node-config.inheritable"},{"from":{"fname":"resource.node-component.flow","id":"node-flow","vaultName":"sflo"},"type":"backlink","position":{"start":{"line":8,"column":3,"offset":474},"end":{"line":8,"column":59,"offset":530},"indent":[]},"value":"resource.node-component.flow.node-config.inheritable"},{"from":{"fname":"resource.node-component.node-config-defaults","id":"9el7ivz22xvt8exiz7tj23f","vaultName":"sflo"},"type":"backlink","position":{"start":{"line":6,"column":30,"offset":260},"end":{"line":6,"column":86,"offset":316},"indent":[]},"value":"resource.node-component.flow.node-config.inheritable"},{"from":{"fname":"resource.node-component.node-config-defaults","id":"9el7ivz22xvt8exiz7tj23f","vaultName":"sflo"},"type":"backlink","position":{"start":{"line":18,"column":187,"offset":1154},"end":{"line":18,"column":243,"offset":1210},"indent":[]},"value":"resource.node-component.flow.node-config.inheritable"},{"from":{"fname":"resource.node-component.snapshot-distribution","id":"0n1lq6aq1gskj46bpcx9h4h","vaultName":"sflo"},"type":"backlink","position":{"start":{"line":7,"column":157,"offset":374},"end":{"line":7,"column":213,"offset":430},"indent":[]},"value":"resource.node-component.flow.node-config.inheritable"},{"from":{"fname":"resource.node-component.flow.node-config","id":"kr1y9tt3qljsbfy8lxm3u1g","vaultName":"sflo"},"type":"backlink","position":{"start":{"line":6,"column":7,"offset":298},"end":{"line":6,"column":87,"offset":378},"indent":[]},"value":"resource.node-component.flow.node-config.inheritable"},{"from":{"fname":"resource.node-component.flow.node-config.operational","id":"6hmxoiahi5lxjg1urdibvi1","vaultName":"sflo"},"type":"backlink","position":{"start":{"line":4,"column":82,"offset":304},"end":{"line":4,"column":156,"offset":378},"indent":[]},"value":"resource.node-component.flow.node-config.inheritable"}],"anchors":{"inheritance-hierarchy":{"type":"header","text":"Inheritance Hierarchy","value":"inheritance-hierarchy","line":10,"column":0,"depth":2},"resolution-algorithm":{"type":"header","text":"Resolution Algorithm","value":"resolution-algorithm","line":21,"column":0,"depth":2},"property-level-inheritance":{"type":"header","text":"Property-Level Inheritance","value":"property-level-inheritance","line":25,"column":0,"depth":3},"configuration-control-properties":{"type":"header","text":"Configuration Control Properties","value":"configuration-control-properties","line":45,"column":0,"depth":2},"nodeconfiginheritanceenabled-childs-perspective":{"type":"header","text":"nodeConfigInheritanceEnabled (Child's Perspective)","value":"nodeconfiginheritanceenabled-childs-perspective","line":47,"column":0,"depth":3},"inheritableconfigpropagationenabled-parents-perspective":{"type":"header","text":"inheritableConfigPropagationEnabled (Parent's Perspective)","value":"inheritableconfigpropagationenabled-parents-perspective","line":53,"column":0,"depth":3}},"children":[],"parent":"kr1y9tt3qljsbfy8lxm3u1g","data":{}},"body":"<h1 id=\"inheritable-config-flow\">inheritable config flow<a aria-hidden=\"true\" class=\"anchor-heading icon-link\" href=\"#inheritable-config-flow\"></a></h1>\n<p>An <strong>inheritable config flow</strong> contains settings that a node makes available to its descendants in the mesh hierarchy. It is the primary mechanism for providing default configurations to child nodes.</p>\n<h2 id=\"inheritance-hierarchy\">Inheritance Hierarchy<a aria-hidden=\"true\" class=\"anchor-heading icon-link\" href=\"#inheritance-hierarchy\"></a></h2>\n<p>The inheritance chain follows this precedence (most specific wins):</p>\n<ol>\n<li><strong>Parent Node's</strong> InheritableNodeConfig</li>\n<li><strong>Grandparent Node's</strong> InheritableNodeConfig (and so on, up the tree)</li>\n<li><strong>Service-level</strong> InheritableNodeConfig</li>\n<li><strong>Platform-level</strong> InheritableNodeConfig (ultimate fallback)</li>\n</ol>\n<p>The final <code>OperationalNodeConfig</code> for a given node is resolved by merging the settings from this chain.</p>\n<h2 id=\"resolution-algorithm\">Resolution Algorithm<a aria-hidden=\"true\" class=\"anchor-heading icon-link\" href=\"#resolution-algorithm\"></a></h2>\n<p>When resolving a node's operational configuration, the system walks up the hierarchy from the node's parent, collecting <code>InheritableNodeConfig</code> at each level. These are merged, with settings from closer ancestors taking precedence.</p>\n<h3 id=\"property-level-inheritance\">Property-Level Inheritance<a aria-hidden=\"true\" class=\"anchor-heading icon-link\" href=\"#property-level-inheritance\"></a></h3>\n<p>Configuration inheritance works at the property level. A child's <code>InheritableNodeConfig</code> can override a single property while still inheriting others from its parent.</p>\n<pre class=\"language-jsonld\"><code class=\"language-jsonld\">{\n  \"@id\": \"parent:inheritableConfig\",\n  \"@type\": \"node-conf:InheritableNodeConfig\",\n  \"node-conf:versioningEnabled\": true,\n  \"node-conf:distributionFormats\": [\"application/trig\", \"application/ld+json\"]\n}\n\n{\n  \"@id\": \"child:inheritableConfig\",\n  \"@type\": \"node-conf:InheritableNodeConfig\",\n  \"node-conf:versioningEnabled\": false\n  // Inherits distributionFormats from parent\n}\n</code></pre>\n<h2 id=\"configuration-control-properties\">Configuration Control Properties<a aria-hidden=\"true\" class=\"anchor-heading icon-link\" href=\"#configuration-control-properties\"></a></h2>\n<h3 id=\"nodeconfiginheritanceenabled-childs-perspective\"><code>nodeConfigInheritanceEnabled</code> (Child's Perspective)<a aria-hidden=\"true\" class=\"anchor-heading icon-link\" href=\"#nodeconfiginheritanceenabled-childs-perspective\"></a></h3>\n<p>Controls whether a node <em>receives</em> inherited configuration.</p>\n<ul>\n<li><strong>Default</strong>: <code>true</code></li>\n<li><strong>Effect</strong>: When <code>false</code>, the node ignores the inheritance chain and uses only its own operational config or system defaults.</li>\n</ul>\n<h3 id=\"inheritableconfigpropagationenabled-parents-perspective\"><code>inheritableConfigPropagationEnabled</code> (Parent's Perspective)<a aria-hidden=\"true\" class=\"anchor-heading icon-link\" href=\"#inheritableconfigpropagationenabled-parents-perspective\"></a></h3>\n<p>Controls whether a node <em>provides</em> its inheritable configuration to its children.</p>\n<ul>\n<li><strong>Default</strong>: <code>true</code></li>\n<li><strong>Effect</strong>: When <code>false</code>, this node acts as a \"firewall,\" blocking its own and any ancestor's inheritable configs from flowing down to its children.</li>\n</ul>\n<hr>\n<strong>Backlinks</strong>\n<ul>\n<li><a href=\"/sflo/notes/concept-summary\">Concept Summary</a></li>\n<li><a href=\"/sflo/notes/nokx5o047yld6voaxnx8tmw\">_config Inheritable Flow</a></li>\n<li><a href=\"/sflo/notes/node-flow\">node flow</a></li>\n<li><a href=\"/sflo/notes/9el7ivz22xvt8exiz7tj23f\">Node Config Defaults</a></li>\n<li><a href=\"/sflo/notes/0n1lq6aq1gskj46bpcx9h4h\">snapshot distribution</a></li>\n<li><a href=\"/sflo/notes/kr1y9tt3qljsbfy8lxm3u1g\">meshnode config flows</a></li>\n<li><a href=\"/sflo/notes/6hmxoiahi5lxjg1urdibvi1\">operational config flow</a></li>\n</ul>","noteIndex":{"id":"voy7zrf0f6bs86m02uadhaf","title":"Semantic Flow Documentation","desc":"","updated":1756155165637,"created":1755709990079,"custom":{"nav_order":0,"permalink":"/"},"fname":"root","type":"note","vault":{"fsPath":"documentation","selfContained":false,"name":"sflo"},"contentHash":"fc9af968e5f79503d69da258f83abf54","links":[{"type":"wiki","from":{"fname":"root","id":"voy7zrf0f6bs86m02uadhaf","vaultName":"sflo"},"value":"now","position":{"start":{"line":4,"column":1,"offset":107},"end":{"line":4,"column":8,"offset":114},"indent":[]},"xvault":false,"sameFile":false,"to":{"fname":"now"}},{"type":"wiki","from":{"fname":"root","id":"voy7zrf0f6bs86m02uadhaf","vaultName":"sflo"},"value":"todo","position":{"start":{"line":4,"column":11,"offset":117},"end":{"line":4,"column":19,"offset":125},"indent":[]},"xvault":false,"sameFile":false,"to":{"fname":"todo"}},{"type":"wiki","from":{"fname":"root","id":"voy7zrf0f6bs86m02uadhaf","vaultName":"sflo"},"value":"principle","position":{"start":{"line":4,"column":22,"offset":128},"end":{"line":4,"column":35,"offset":141},"indent":[]},"xvault":false,"sameFile":false,"to":{"fname":"principle"}},{"type":"wiki","from":{"fname":"root","id":"voy7zrf0f6bs86m02uadhaf","vaultName":"sflo"},"value":"dev.contributor.djradon.dev-log","position":{"start":{"line":4,"column":38,"offset":144},"end":{"line":4,"column":73,"offset":179},"indent":[]},"xvault":false,"sameFile":false,"to":{"fname":"dev.contributor.djradon.dev-log"}},{"type":"wiki","from":{"fname":"root","id":"voy7zrf0f6bs86m02uadhaf","vaultName":"sflo"},"value":"concept.mesh-repo","position":{"start":{"line":10,"column":1,"offset":498},"end":{"line":10,"column":22,"offset":519},"indent":[]},"xvault":false,"sameFile":false,"to":{"fname":"concept.mesh-repo"}},{"type":"wiki","from":{"fname":"root","id":"voy7zrf0f6bs86m02uadhaf","vaultName":"sflo"},"value":"concept.mesh","position":{"start":{"line":10,"column":40,"offset":537},"end":{"line":10,"column":56,"offset":553},"indent":[]},"xvault":false,"sameFile":false,"to":{"fname":"concept.mesh"}},{"type":"wiki","from":{"fname":"root","id":"voy7zrf0f6bs86m02uadhaf","vaultName":"sflo"},"value":"concept.semantic-site","position":{"start":{"line":10,"column":105,"offset":602},"end":{"line":10,"column":130,"offset":627},"indent":[]},"xvault":false,"sameFile":false,"to":{"fname":"concept.semantic-site"}},{"type":"wiki","from":{"fname":"root","id":"voy7zrf0f6bs86m02uadhaf","vaultName":"sflo"},"value":"feature","position":{"start":{"line":23,"column":7,"offset":1041},"end":{"line":23,"column":18,"offset":1052},"indent":[]},"xvault":false,"sameFile":false,"to":{"fname":"feature"}}],"anchors":{"what-is-semantic-flow":{"type":"header","text":"What Is Semantic Flow?","value":"what-is-semantic-flow","line":12,"column":0,"depth":2},"benefits":{"type":"header","text":"Benefits","value":"benefits","line":18,"column":0,"depth":2},"features":{"type":"header","text":"Features","value":"features","line":25,"column":0,"depth":2}},"children":["p0vd6xnshcxw14ztkglxyxn","19a9e7c270ebne02zeg3fje","33hi315wuis0ghnuy09bp2z","faq000","ggle3sz2jv3vf53t9qplrzo","ooq9uh0sqm7ka2a54bp0zm6","yxn5rsqsv2gq4s6wbnxsjsj","l9g8eki3dtir51o4jagac5a","28q7fh05bs691llgv7htxnw","xmdevh3s6gvp93m3nyc6683","xqjr13fyons9goxv8rjrskj","42o8iwwkuygy3w63bn94e6q","ft4rt581qo1s7w3aitc02i8","04da48tdciqmtx35rkmw2e0"],"parent":null,"data":{},"body":"\n**Dereferenceable, versioned semantic meshes** will be the foundation for a new era of knowledge graphs.\n\n[[now]] | [[todo]] | [[principle]] | [[dev.contributor.djradon.dev-log]]\n\n## What Is Semantic Flow?\n\n**Semantic Flow** is a framework for managing and publishing resource identifiers, knowledge graphs and other semantic data by leveraging GitHub, Gitlab, and other free static hosting services. It enables a **dereferenceable Semantic Web** where every HTTP IRI returns meaningful content.\n\n[[concept.mesh-repo]] provide storage, [[concept.mesh]] provide resource management and publishing, and [[concept.semantic-site]] support data discovery and explainability.\n\n## Benefits\n\n- own your own self-describing data and data schemas\n- complete version history when you want it\n- reliable persistence\n- truly FAIR (Findable, Accessible, Interoperable, and Reusable)\n\n## Features\n\n- seamlessly integrate other data sources anywhere in your mesh\n- generate and customize mini-sites or single-page applications for nodes in your mesh\n- see [[feature]] for a list of planned features\n"},"collectionChildren":null,"customHeadContent":null,"config":{"version":5,"dev":{"enablePreviewV2":true,"enableSelfContainedVaults":true},"commands":{"lookup":{"note":{"selectionMode":"none","confirmVaultOnCreate":true,"vaultSelectionModeOnCreate":"smart","leaveTrace":false,"bubbleUpCreateNew":true,"fuzzThreshold":0.2}},"randomNote":{},"insertNoteLink":{"aliasMode":"selection","enableMultiSelect":false},"insertNoteIndex":{"enableMarker":false},"copyNoteLink":{"aliasMode":"title"},"templateHierarchy":"template"},"workspace":{"vaults":[{"fsPath":"documentation","selfContained":false,"name":"sflo"}],"journal":{"dailyDomain":"daily","name":"journal","dateFormat":"y.MM.dd","addBehavior":"childOfDomain"},"scratch":{"name":"scratch","dateFormat":"y.MM.dd.HHmmss","addBehavior":"asOwnDomain"},"task":{"name":"task","dateFormat":"y.MM.dd","addBehavior":"asOwnDomain","statusSymbols":{"":" ","wip":"w","done":"x","assigned":"a","moved":"m","blocked":"b","delegated":"l","dropped":"d","pending":"y"},"taskCompleteStatus":["done","x"],"prioritySymbols":{"H":"high","M":"medium","L":"low"},"todoIntegration":false,"createTaskSelectionType":"selection2link"},"graph":{"zoomSpeed":1,"createStub":false},"enableAutoCreateOnDefinition":false,"enableXVaultWikiLink":false,"enableRemoteVaultInit":true,"enableUserTags":true,"enableHashTags":true,"workspaceVaultSyncMode":"noCommit","enableAutoFoldFrontmatter":false,"enableEditorDecorations":true,"maxPreviewsCached":10,"maxNoteLength":204800,"enableFullHierarchyNoteTitle":false},"preview":{"enableFMTitle":true,"enableNoteTitleForLink":true,"enableFrontmatterTags":true,"enableHashesForFMTags":false,"enablePrettyRefs":true,"enableKatex":true,"automaticallyShowPreview":false},"publishing":{"enableFMTitle":true,"enableNoteTitleForLink":true,"enablePrettyRefs":true,"enableKatex":true,"copyAssets":true,"siteHierarchies":["root"],"writeStubs":false,"siteRootDir":"docs","seo":{"title":"Semantic Flow Docs","description":"A dendron-based wiki for sflo"},"github":{"enableEditLink":true,"editLinkText":"Edit this page on GitHub","editBranch":"main","editViewMode":"tree"},"enableSiteLastModified":true,"enableFrontmatterTags":true,"enableHashesForFMTags":false,"enableRandomlyColoredTags":true,"enableTaskNotes":true,"enablePrettyLinks":true,"searchMode":"search","siteUrl":"https://semantic-flow.github.io/sflo","assetsPrefix":"/sflo","siteFaviconPath":"favicon.ico","siteIndex":"root"}}},"__N_SSG":true}
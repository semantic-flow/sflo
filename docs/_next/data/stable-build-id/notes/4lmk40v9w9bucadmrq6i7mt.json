{"pageProps":{"note":{"id":"4lmk40v9w9bucadmrq6i7mt","title":"Namespace Relative Basing","desc":"","updated":1755919810482,"created":1755919802583,"custom":{},"fname":"concept.namespace-relative-basing","type":"note","vault":{"fsPath":"documentation","selfContained":false,"name":"sflo"},"contentHash":"1737cfa1ed5b5931a949f1ea158d933f","links":[{"from":{"fname":"concept.identifier","id":"concept-identifier","vaultName":"sflo"},"type":"backlink","position":{"start":{"line":88,"column":5,"offset":5746},"end":{"line":88,"column":42,"offset":5783},"indent":[]},"value":"concept.namespace-relative-basing"}],"anchors":{"namespace-relative-basing":{"type":"header","text":"Namespace-Relative Basing","value":"namespace-relative-basing","line":14,"column":0,"depth":1},"concept":{"type":"header","text":"Concept","value":"concept","line":18,"column":0,"depth":2},"path-layout":{"type":"header","text":"Path layout","value":"path-layout","line":24,"column":0,"depth":3},"with-namespace-relative-basing":{"type":"header","text":"With namespace-relative basing","value":"with-namespace-relative-basing","line":34,"column":0,"depth":3},"advantages":{"type":"header","text":"Advantages","value":"advantages","line":51,"column":0,"depth":2},"comparison-with-node-relative-basing":{"type":"header","text":"Comparison with Node-Relative Basing","value":"comparison-with-node-relative-basing","line":59,"column":0,"depth":2},"guidelines":{"type":"header","text":"Guidelines","value":"guidelines","line":68,"column":0,"depth":2},"json-ld-example":{"type":"header","text":"JSON-LD Example","value":"json-ld-example","line":76,"column":0,"depth":2}},"children":[],"parent":"p0vd6xnshcxw14ztkglxyxn","data":{}},"body":"<h1 id=\"namespace-relative-basing\">Namespace Relative Basing<a aria-hidden=\"true\" class=\"anchor-heading icon-link\" href=\"#namespace-relative-basing\"></a></h1>\n<p>Perfect ‚Äî I like <strong>intramesh identifiers</strong> as a project-specific term, since it makes clear: ‚Äúthese are inside the mesh, and they behave like relative IRIs but with conventions.‚Äù üëç</p>\n<p>Here‚Äôs a doc-style write-up on <strong>namespace-relative basing</strong>, phrased to integrate with your terminology and conventions:</p>\n<hr>\n<h1 id=\"namespace-relative-basing-1\">Namespace-Relative Basing<a aria-hidden=\"true\" class=\"anchor-heading icon-link\" href=\"#namespace-relative-basing-1\"></a></h1>\n<p>In Semantic Flow, distributions are often nested deeply inside a node‚Äôs flows (e.g., <code>_data-flow/_current/...</code>). If base IRIs are left implicit, relative identifiers would need multiple <code>../</code> steps to reach the node or its siblings. To simplify this, Semantic Flow recommends <strong>namespace-relative basing</strong>.</p>\n<h2 id=\"concept\">Concept<a aria-hidden=\"true\" class=\"anchor-heading icon-link\" href=\"#concept\"></a></h2>\n<ul>\n<li>Every distribution file declares an explicit <code>@base</code> (in TriG/Turtle) or <code>@context/@base</code> (in JSON-LD).</li>\n<li>Instead of using the document‚Äôs path as the base (the default in RDF), the base is set <strong>relative to the namespace root</strong> (one level above the node root).</li>\n<li>This makes the <strong>namespace root</strong> the anchor, so that nodes can be referred to by simple <code>&#x3C;name></code> identifiers.</li>\n</ul>\n<h3 id=\"path-layout\">Path layout<a aria-hidden=\"true\" class=\"anchor-heading icon-link\" href=\"#path-layout\"></a></h3>\n<pre><code>namespace-root/\n  djradon/\n    _data-flow/_current/djradon.trig\n    _meta-flow/_current/meta.trig\n  another-node/\n</code></pre>\n<h3 id=\"with-namespace-relative-basing\">With namespace-relative basing<a aria-hidden=\"true\" class=\"anchor-heading icon-link\" href=\"#with-namespace-relative-basing\"></a></h3>\n<pre class=\"language-turtle\"><code class=\"language-turtle\"><span class=\"token keyword\">@base</span> <span class=\"token url\"><span class=\"token punctuation\">&#x3C;</span>../../../<span class=\"token punctuation\">></span></span> <span class=\"token punctuation\">.</span>\n\n<span class=\"token url\"><span class=\"token punctuation\">&#x3C;</span>djradon<span class=\"token punctuation\">></span></span> <span class=\"token keyword\">a</span> <span class=\"token function\"><span class=\"token prefix\"><span class=\"token punctuation\">:</span></span><span class=\"token local-name\">Node</span></span> <span class=\"token punctuation\">;</span>\n  <span class=\"token function\"><span class=\"token prefix\"><span class=\"token punctuation\">:</span></span><span class=\"token local-name\">hasMeta</span></span> <span class=\"token url\"><span class=\"token punctuation\">&#x3C;</span>djradon/_meta-flow/_current/meta.trig<span class=\"token punctuation\">></span></span> <span class=\"token punctuation\">;</span>\n  <span class=\"token function\"><span class=\"token prefix\"><span class=\"token punctuation\">:</span></span><span class=\"token local-name\">relatedTo</span></span> <span class=\"token url\"><span class=\"token punctuation\">&#x3C;</span>another-node<span class=\"token punctuation\">></span></span> <span class=\"token punctuation\">.</span>\n</code></pre>\n<ul>\n<li><code>&#x3C;></code> resolves to the namespace root (<code>namespace-root/</code>).</li>\n<li><code>&#x3C;djradon></code> resolves to the node (<code>namespace-root/djradon/</code>).</li>\n<li><code>&#x3C;another-node></code> is a sibling in the namespace.</li>\n<li>Intra-node flows are reached with <code>djradon/...</code>.</li>\n</ul>\n<hr>\n<h2 id=\"advantages\">Advantages<a aria-hidden=\"true\" class=\"anchor-heading icon-link\" href=\"#advantages\"></a></h2>\n<ul>\n<li><strong>Sibling references are short</strong>: <code>&#x3C;another-node></code> instead of climbing out with <code>../../../</code>.</li>\n<li><strong>Node references are stable</strong>: <code>&#x3C;djradon></code> always means the node root, regardless of where the distribution lives.</li>\n<li><strong>Clarity</strong>: <code>&#x3C;></code> = namespace, <code>&#x3C;name></code> = node, <code>&#x3C;name/path></code> = subresources.</li>\n</ul>\n<hr>\n<h2 id=\"comparison-with-node-relative-basing\">Comparison with Node-Relative Basing<a aria-hidden=\"true\" class=\"anchor-heading icon-link\" href=\"#comparison-with-node-relative-basing\"></a></h2>\n<div class=\"table-responsive\">\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n<table><thead><tr><th>Basing Style</th><th><code>@base</code> value</th><th><code>&#x3C;></code> =</th><th><code>&#x3C;djradon></code> =</th><th>Best For‚Ä¶</th></tr></thead><tbody><tr><td><strong>Node-relative</strong></td><td><code>../../</code></td><td>Node root</td><td>Child of node</td><td>Config/meta flows describing the node itself</td></tr><tr><td><strong>Namespace-relative</strong></td><td><code>../../../</code></td><td>Namespace root</td><td>Node root</td><td>Data/reference flows linking across nodes</td></tr></tbody></table></div>\n<hr>\n<h2 id=\"guidelines\">Guidelines<a aria-hidden=\"true\" class=\"anchor-heading icon-link\" href=\"#guidelines\"></a></h2>\n<ul>\n<li><strong><em>data-flow</em> and <em>ref-flow</em></strong> distributions should use <strong>namespace-relative basing</strong>, since they often refer to siblings or other nodes.</li>\n<li><strong><em>meta-flow</em> and <em>config-flow</em></strong> distributions may use <strong>node-relative basing</strong> if they mostly describe the node itself.</li>\n<li>Always set <code>@base</code> explicitly in every distribution to avoid fragile relative paths.</li>\n</ul>\n<hr>\n<h2 id=\"json-ld-example\">JSON-LD Example<a aria-hidden=\"true\" class=\"anchor-heading icon-link\" href=\"#json-ld-example\"></a></h2>\n<pre class=\"language-json\"><code class=\"language-json\"><span class=\"token punctuation\">{</span>\n  <span class=\"token property\">\"@context\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token property\">\"@base\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"../../../\"</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  <span class=\"token property\">\"@id\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"djradon\"</span><span class=\"token punctuation\">,</span>\n  <span class=\"token property\">\"@type\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"Node\"</span><span class=\"token punctuation\">,</span>\n  <span class=\"token property\">\"hasMeta\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"djradon/_meta-flow/_current/meta.trig\"</span><span class=\"token punctuation\">,</span>\n  <span class=\"token property\">\"relatedTo\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"another-node\"</span>\n<span class=\"token punctuation\">}</span>\n</code></pre>\n<hr>\n<p>‚úÖ With namespace-relative basing, intramesh identifiers remain short, predictable, and consistent across all distributions, while still resolving correctly to absolute IRIs.</p>\n<hr>\n<strong>Backlinks</strong>\n<ul>\n<li><a href=\"/sflo/notes/concept-identifier\">identifier</a></li>\n</ul>","noteIndex":{"id":"voy7zrf0f6bs86m02uadhaf","title":"Semantic Flow Documentation","desc":"","updated":1756155165637,"created":1755709990079,"custom":{"nav_order":0,"permalink":"/"},"fname":"root","type":"note","vault":{"fsPath":"documentation","selfContained":false,"name":"sflo"},"contentHash":"fc9af968e5f79503d69da258f83abf54","links":[{"type":"wiki","from":{"fname":"root","id":"voy7zrf0f6bs86m02uadhaf","vaultName":"sflo"},"value":"now","position":{"start":{"line":4,"column":1,"offset":107},"end":{"line":4,"column":8,"offset":114},"indent":[]},"xvault":false,"sameFile":false,"to":{"fname":"now"}},{"type":"wiki","from":{"fname":"root","id":"voy7zrf0f6bs86m02uadhaf","vaultName":"sflo"},"value":"todo","position":{"start":{"line":4,"column":11,"offset":117},"end":{"line":4,"column":19,"offset":125},"indent":[]},"xvault":false,"sameFile":false,"to":{"fname":"todo"}},{"type":"wiki","from":{"fname":"root","id":"voy7zrf0f6bs86m02uadhaf","vaultName":"sflo"},"value":"principle","position":{"start":{"line":4,"column":22,"offset":128},"end":{"line":4,"column":35,"offset":141},"indent":[]},"xvault":false,"sameFile":false,"to":{"fname":"principle"}},{"type":"wiki","from":{"fname":"root","id":"voy7zrf0f6bs86m02uadhaf","vaultName":"sflo"},"value":"dev.contributor.djradon.dev-log","position":{"start":{"line":4,"column":38,"offset":144},"end":{"line":4,"column":73,"offset":179},"indent":[]},"xvault":false,"sameFile":false,"to":{"fname":"dev.contributor.djradon.dev-log"}},{"type":"wiki","from":{"fname":"root","id":"voy7zrf0f6bs86m02uadhaf","vaultName":"sflo"},"value":"concept.mesh-repo","position":{"start":{"line":10,"column":1,"offset":498},"end":{"line":10,"column":22,"offset":519},"indent":[]},"xvault":false,"sameFile":false,"to":{"fname":"concept.mesh-repo"}},{"type":"wiki","from":{"fname":"root","id":"voy7zrf0f6bs86m02uadhaf","vaultName":"sflo"},"value":"concept.mesh","position":{"start":{"line":10,"column":40,"offset":537},"end":{"line":10,"column":56,"offset":553},"indent":[]},"xvault":false,"sameFile":false,"to":{"fname":"concept.mesh"}},{"type":"wiki","from":{"fname":"root","id":"voy7zrf0f6bs86m02uadhaf","vaultName":"sflo"},"value":"concept.semantic-site","position":{"start":{"line":10,"column":105,"offset":602},"end":{"line":10,"column":130,"offset":627},"indent":[]},"xvault":false,"sameFile":false,"to":{"fname":"concept.semantic-site"}},{"type":"wiki","from":{"fname":"root","id":"voy7zrf0f6bs86m02uadhaf","vaultName":"sflo"},"value":"feature","position":{"start":{"line":23,"column":7,"offset":1041},"end":{"line":23,"column":18,"offset":1052},"indent":[]},"xvault":false,"sameFile":false,"to":{"fname":"feature"}}],"anchors":{"what-is-semantic-flow":{"type":"header","text":"What Is Semantic Flow?","value":"what-is-semantic-flow","line":12,"column":0,"depth":2},"benefits":{"type":"header","text":"Benefits","value":"benefits","line":18,"column":0,"depth":2},"features":{"type":"header","text":"Features","value":"features","line":25,"column":0,"depth":2}},"children":["p0vd6xnshcxw14ztkglxyxn","19a9e7c270ebne02zeg3fje","33hi315wuis0ghnuy09bp2z","faq000","ggle3sz2jv3vf53t9qplrzo","ooq9uh0sqm7ka2a54bp0zm6","yxn5rsqsv2gq4s6wbnxsjsj","l9g8eki3dtir51o4jagac5a","28q7fh05bs691llgv7htxnw","xmdevh3s6gvp93m3nyc6683","xqjr13fyons9goxv8rjrskj","42o8iwwkuygy3w63bn94e6q","ft4rt581qo1s7w3aitc02i8","04da48tdciqmtx35rkmw2e0"],"parent":null,"data":{},"body":"\n**Dereferenceable, versioned semantic meshes** will be the foundation for a new era of knowledge graphs.\n\n[[now]] | [[todo]] | [[principle]] | [[dev.contributor.djradon.dev-log]]\n\n## What Is Semantic Flow?\n\n**Semantic Flow** is a framework for managing and publishing resource identifiers, knowledge graphs and other semantic data by leveraging GitHub, Gitlab, and other free static hosting services. It enables a **dereferenceable Semantic Web** where every HTTP IRI returns meaningful content.\n\n[[concept.mesh-repo]] provide storage, [[concept.mesh]] provide resource management and publishing, and [[concept.semantic-site]] support data discovery and explainability.\n\n## Benefits\n\n- own your own self-describing data and data schemas\n- complete version history when you want it\n- reliable persistence\n- truly FAIR (Findable, Accessible, Interoperable, and Reusable)\n\n## Features\n\n- seamlessly integrate other data sources anywhere in your mesh\n- generate and customize mini-sites or single-page applications for nodes in your mesh\n- see [[feature]] for a list of planned features\n"},"collectionChildren":null,"customHeadContent":null,"config":{"version":5,"dev":{"enablePreviewV2":true,"enableSelfContainedVaults":true},"commands":{"lookup":{"note":{"selectionMode":"none","confirmVaultOnCreate":true,"vaultSelectionModeOnCreate":"smart","leaveTrace":false,"bubbleUpCreateNew":true,"fuzzThreshold":0.2}},"randomNote":{},"insertNoteLink":{"aliasMode":"selection","enableMultiSelect":false},"insertNoteIndex":{"enableMarker":false},"copyNoteLink":{"aliasMode":"title"},"templateHierarchy":"template"},"workspace":{"vaults":[{"fsPath":"documentation","selfContained":false,"name":"sflo"}],"journal":{"dailyDomain":"daily","name":"journal","dateFormat":"y.MM.dd","addBehavior":"childOfDomain"},"scratch":{"name":"scratch","dateFormat":"y.MM.dd.HHmmss","addBehavior":"asOwnDomain"},"task":{"name":"task","dateFormat":"y.MM.dd","addBehavior":"asOwnDomain","statusSymbols":{"":" ","wip":"w","done":"x","assigned":"a","moved":"m","blocked":"b","delegated":"l","dropped":"d","pending":"y"},"taskCompleteStatus":["done","x"],"prioritySymbols":{"H":"high","M":"medium","L":"low"},"todoIntegration":false,"createTaskSelectionType":"selection2link"},"graph":{"zoomSpeed":1,"createStub":false},"enableAutoCreateOnDefinition":false,"enableXVaultWikiLink":false,"enableRemoteVaultInit":true,"enableUserTags":true,"enableHashTags":true,"workspaceVaultSyncMode":"noCommit","enableAutoFoldFrontmatter":false,"enableEditorDecorations":true,"maxPreviewsCached":10,"maxNoteLength":204800,"enableFullHierarchyNoteTitle":false},"preview":{"enableFMTitle":true,"enableNoteTitleForLink":true,"enableFrontmatterTags":true,"enableHashesForFMTags":false,"enablePrettyRefs":true,"enableKatex":true,"automaticallyShowPreview":false},"publishing":{"enableFMTitle":true,"enableNoteTitleForLink":true,"enablePrettyRefs":true,"enableKatex":true,"copyAssets":true,"siteHierarchies":["root"],"writeStubs":false,"siteRootDir":"docs","seo":{"title":"Semantic Flow Docs","description":"A dendron-based wiki for sflo"},"github":{"enableEditLink":true,"editLinkText":"Edit this page on GitHub","editBranch":"main","editViewMode":"tree"},"enableSiteLastModified":true,"enableFrontmatterTags":true,"enableHashesForFMTags":false,"enableRandomlyColoredTags":true,"enableTaskNotes":true,"enablePrettyLinks":true,"searchMode":"search","siteUrl":"https://semantic-flow.github.io/sflo","assetsPrefix":"/sflo","siteFaviconPath":"favicon.ico","siteIndex":"root"}}},"__N_SSG":true}
{"pageProps":{"note":{"id":"kr1y9tt3qljsbfy8lxm3u1g","title":"config component","desc":"","updated":1754285606247,"created":1752325627733,"custom":{},"fname":"concept.mesh.resource.element.flow.config","type":"note","vault":{"fsPath":"documentation","selfContained":false,"name":"sflo"},"contentHash":"376030fed5304073a0089b53cb9310c2","links":[{"type":"wiki","from":{"fname":"concept.mesh.resource.element.flow.config","id":"kr1y9tt3qljsbfy8lxm3u1g","vaultName":"sflo"},"value":"concept.mesh.resource.element.node-config-defaults","position":{"start":{"line":5,"column":55,"offset":260},"end":{"line":5,"column":109,"offset":314},"indent":[]},"xvault":false,"sameFile":false,"to":{"fname":"concept.mesh.resource.element.node-config-defaults"}},{"type":"wiki","from":{"fname":"concept.mesh.resource.element.flow.config","id":"kr1y9tt3qljsbfy8lxm3u1g","vaultName":"sflo"},"value":"concept.node-config","position":{"start":{"line":9,"column":132,"offset":559},"end":{"line":9,"column":155,"offset":582},"indent":[]},"xvault":false,"sameFile":false,"to":{"fname":"concept.node-config"}},{"from":{"fname":"concept.node-config","id":"pqjdlyd8g80x3yr9o3p82mj","vaultName":"sflo"},"type":"backlink","position":{"start":{"line":14,"column":97,"offset":429},"end":{"line":14,"column":142,"offset":474},"indent":[]},"value":"concept.mesh.resource.element.flow.config"},{"from":{"fname":"concept.node-config","id":"pqjdlyd8g80x3yr9o3p82mj","vaultName":"sflo"},"type":"backlink","position":{"start":{"line":20,"column":119,"offset":1004},"end":{"line":20,"column":164,"offset":1049},"indent":[]},"value":"concept.mesh.resource.element.flow.config"},{"from":{"fname":"concept.node-config","id":"pqjdlyd8g80x3yr9o3p82mj","vaultName":"sflo"},"type":"backlink","position":{"start":{"line":27,"column":21,"offset":1517},"end":{"line":27,"column":66,"offset":1562},"indent":[]},"value":"concept.mesh.resource.element.flow.config"},{"from":{"fname":"concept.mesh.resource-facet.user","id":"rc1wsoryoff9ffxb8wwbf9p","vaultName":"sflo"},"type":"backlink","position":{"start":{"line":6,"column":3,"offset":196},"end":{"line":6,"column":48,"offset":241},"indent":[]},"value":"concept.mesh.resource.element.flow.config"},{"from":{"fname":"concept.mesh.resource.element.handle","id":"o2926clbf63vi9kln79kapg","vaultName":"sflo"},"type":"backlink","position":{"start":{"line":12,"column":81,"offset":806},"end":{"line":12,"column":126,"offset":851},"indent":[]},"value":"concept.mesh.resource.element.flow.config"},{"from":{"fname":"concept.mesh.resource.folder._config-flow","id":"hfmgd0w82phfjkre3ippnk9","vaultName":"sflo"},"type":"backlink","position":{"start":{"line":2,"column":36,"offset":36},"end":{"line":2,"column":81,"offset":81},"indent":[]},"value":"concept.mesh.resource.element.flow.config"},{"from":{"fname":"concept.mesh.resource.element.flow.config.inheritance","id":"config-inheritance-resolution","vaultName":"sflo"},"type":"backlink","position":{"start":{"line":350,"column":3,"offset":10942},"end":{"line":350,"column":48,"offset":10987},"indent":[]},"value":"concept.mesh.resource.element.flow.config"}],"anchors":{"core-principles":{"type":"header","text":"Core Principles","value":"core-principles","line":17,"column":0,"depth":2},"node-config-as-node-flow":{"type":"header","text":"Node-Config as node flow","value":"node-config-as-node-flow","line":19,"column":0,"depth":3},"defaults-vs-config":{"type":"header","text":"Defaults vs Config","value":"defaults-vs-config","line":24,"column":0,"depth":3},"component-structure":{"type":"header","text":"Component Structure","value":"component-structure","line":30,"column":0,"depth":2},"separate-components":{"type":"header","text":"Separate Components","value":"separate-components","line":32,"column":0,"depth":3},"file-structure":{"type":"header","text":"File Structure","value":"file-structure","line":37,"column":0,"depth":3},"config-resolution-logic":{"type":"header","text":"Config Resolution Logic","value":"config-resolution-logic","line":47,"column":0,"depth":2},"when-config-is-retrieved":{"type":"header","text":"When Config is Retrieved","value":"when-config-is-retrieved","line":49,"column":0,"depth":3},"defaults-resolution":{"type":"header","text":"Defaults Resolution","value":"defaults-resolution","line":54,"column":0,"depth":3},"schema-management":{"type":"header","text":"Schema Management","value":"schema-management","line":60,"column":0,"depth":2},"schema-versioning":{"type":"header","text":"Schema Versioning","value":"schema-versioning","line":62,"column":0,"depth":3},"update-operations":{"type":"header","text":"Update Operations","value":"update-operations","line":67,"column":0,"depth":3},"importexport-behavior":{"type":"header","text":"Import/Export Behavior","value":"importexport-behavior","line":72,"column":0,"depth":2},"import-decisions":{"type":"header","text":"Import Decisions","value":"import-decisions","line":74,"column":0,"depth":3},"transposability":{"type":"header","text":"Transposability","value":"transposability","line":80,"column":0,"depth":3},"implementation-considerations":{"type":"header","text":"Implementation Considerations","value":"implementation-considerations","line":85,"column":0,"depth":2},"config-manager-interface":{"type":"header","text":"Config Manager Interface","value":"config-manager-interface","line":87,"column":0,"depth":3},"service-vs-node-config":{"type":"header","text":"Service vs Node Config","value":"service-vs-node-config","line":98,"column":0,"depth":3},"key-benefits":{"type":"header","text":"Key Benefits","value":"key-benefits","line":103,"column":0,"depth":2},"predictability":{"type":"header","text":"Predictability","value":"predictability","line":105,"column":0,"depth":3},"flexibility":{"type":"header","text":"Flexibility","value":"flexibility","line":110,"column":0,"depth":3},"maintainability":{"type":"header","text":"Maintainability","value":"maintainability","line":115,"column":0,"depth":3},"operational-workflows":{"type":"header","text":"Operational Workflows","value":"operational-workflows","line":120,"column":0,"depth":2},"new-node-creation":{"type":"header","text":"New Node Creation","value":"new-node-creation","line":122,"column":0,"depth":3},"config-updates":{"type":"header","text":"Config Updates","value":"config-updates","line":127,"column":0,"depth":3},"schema-migration":{"type":"header","text":"Schema Migration","value":"schema-migration","line":132,"column":0,"depth":3}},"children":["config-inheritance-resolution"],"parent":"rregmt56znauz71qgypet6a","data":{}},"body":"<h1 id=\"config-component\">config component<a aria-hidden=\"true\" class=\"anchor-heading icon-link\" href=\"#config-component\"></a></h1>\n<p>Node configuration can be inherited from any parent nodes, and overrides are accomplished with an optional node <code>_config-component</code> that travels with the node and is distinct from the <code>_meta-component</code>.</p>\n<p>Default configuration can be determined recursing up  <a href=\"/sflo/notes/9el7ivz22xvt8exiz7tj23f\">Node Config Defaults</a>, which can also be inherited from parent nodes. </p>\n<p>Inheritance of configuration and defaults can be turned off. </p>\n<p>In case of missing configuration and absence of user defaults, the system will use sensible defaults which can be specified in the <a href=\"/sflo/notes/pqjdlyd8g80x3yr9o3p82mj\">node config</a></p>\n<h2 id=\"core-principles\">Core Principles<a aria-hidden=\"true\" class=\"anchor-heading icon-link\" href=\"#core-principles\"></a></h2>\n<h3 id=\"node-config-as-node-flow\">Node-Config as node flow<a aria-hidden=\"true\" class=\"anchor-heading icon-link\" href=\"#node-config-as-node-flow\"></a></h3>\n<ul>\n<li><strong>Optional</strong>: </li>\n<li><strong>Transposable</strong>: Node config travels with nodes during import/graft operations</li>\n<li><strong>Composable</strong>: Each node may have its own self-contained configuration, but i</li>\n</ul>\n<h3 id=\"defaults-vs-config\">Defaults vs Config<a aria-hidden=\"true\" class=\"anchor-heading icon-link\" href=\"#defaults-vs-config\"></a></h3>\n<ul>\n<li><strong>Config</strong>: Actual operational settings for a specific node</li>\n<li><strong>Defaults</strong>: Fallback values when config is missing or incomplete</li>\n<li><strong>Defaults inheritance</strong>: Only occurs when needed, walks up mesh hierarchy</li>\n<li><strong>Most specific wins</strong>: Closer defaults override higher-level ones</li>\n</ul>\n<h2 id=\"component-structure\">Component Structure<a aria-hidden=\"true\" class=\"anchor-heading icon-link\" href=\"#component-structure\"></a></h2>\n<h3 id=\"separate-components\">Separate Components<a aria-hidden=\"true\" class=\"anchor-heading icon-link\" href=\"#separate-components\"></a></h3>\n<ul>\n<li><code>_config-component</code>: Operational behavior settings</li>\n<li><code>_meta-component</code>: Structural/system metadata</li>\n<li><strong>Rationale</strong>: Different update cadences, concerns, and responsibilities</li>\n</ul>\n<h3 id=\"file-structure\">File Structure<a aria-hidden=\"true\" class=\"anchor-heading icon-link\" href=\"#file-structure\"></a></h3>\n<pre><code>/node-path/\n  _config-component/\n    _current/\n      config.jsonld\n    _next/           # optional, for pending changes\n      config.jsonld\n</code></pre>\n<h2 id=\"config-resolution-logic\">Config Resolution Logic<a aria-hidden=\"true\" class=\"anchor-heading icon-link\" href=\"#config-resolution-logic\"></a></h2>\n<h3 id=\"when-config-is-retrieved\">When Config is Retrieved<a aria-hidden=\"true\" class=\"anchor-heading icon-link\" href=\"#when-config-is-retrieved\"></a></h3>\n<ol>\n<li><strong>Has valid config</strong>: Use node's <code>_config-component</code> directly</li>\n<li><strong>No config exists</strong>: Walk up tree for defaults, create new config</li>\n<li><strong>Missing required fields</strong>: Fill gaps from defaults hierarchy</li>\n</ol>\n<h3 id=\"defaults-resolution\">Defaults Resolution<a aria-hidden=\"true\" class=\"anchor-heading icon-link\" href=\"#defaults-resolution\"></a></h3>\n<ul>\n<li>Walk up mesh hierarchy from node to root</li>\n<li>Collect defaults at each level that has <code>flow-config-defaults</code></li>\n<li>Most specific (closest to node) takes precedence</li>\n<li>Create complete config from merged defaults</li>\n</ul>\n<h2 id=\"schema-management\">Schema Management<a aria-hidden=\"true\" class=\"anchor-heading icon-link\" href=\"#schema-management\"></a></h2>\n<h3 id=\"schema-versioning\">Schema Versioning<a aria-hidden=\"true\" class=\"anchor-heading icon-link\" href=\"#schema-versioning\"></a></h3>\n<ul>\n<li>Each config includes <code>schemaVersion</code> field</li>\n<li>Schema updates trigger config validation</li>\n<li>Backward compatibility maintained where possible</li>\n</ul>\n<h3 id=\"update-operations\">Update Operations<a aria-hidden=\"true\" class=\"anchor-heading icon-link\" href=\"#update-operations\"></a></h3>\n<ul>\n<li><code>flow update</code> command handles schema migrations</li>\n<li>Can target specific subtrees or entire mesh</li>\n<li>Triggers defaults walk for outdated/missing configs</li>\n</ul>\n<h2 id=\"importexport-behavior\">Import/Export Behavior<a aria-hidden=\"true\" class=\"anchor-heading icon-link\" href=\"#importexport-behavior\"></a></h2>\n<h3 id=\"import-decisions\">Import Decisions<a aria-hidden=\"true\" class=\"anchor-heading icon-link\" href=\"#import-decisions\"></a></h3>\n<ul>\n<li><strong>Interactive mode</strong>: User chooses keep/replace/merge</li>\n<li><strong>Automated mode</strong>: Policy-driven decisions</li>\n<li><strong>Per-node basis</strong>: Each node's config handled independently</li>\n<li><strong>No merging required</strong>: One config per node eliminates conflicts</li>\n</ul>\n<h3 id=\"transposability\">Transposability<a aria-hidden=\"true\" class=\"anchor-heading icon-link\" href=\"#transposability\"></a></h3>\n<ul>\n<li>Config components travel with nodes during operations</li>\n<li>Option to reset config during import (use target mesh defaults)</li>\n<li>Maintains semantic consistency across mesh boundaries</li>\n</ul>\n<h2 id=\"implementation-considerations\">Implementation Considerations<a aria-hidden=\"true\" class=\"anchor-heading icon-link\" href=\"#implementation-considerations\"></a></h2>\n<h3 id=\"config-manager-interface\">Config Manager Interface<a aria-hidden=\"true\" class=\"anchor-heading icon-link\" href=\"#config-manager-interface\"></a></h3>\n<pre class=\"language-typescript\"><code class=\"language-typescript\"><span class=\"token keyword\">interface</span> <span class=\"token class-name\"><span class=\"token maybe-class-name\">ConfigManager</span></span> <span class=\"token punctuation\">{</span>\n  <span class=\"token function\">loadNodeConfig</span><span class=\"token punctuation\">(</span>nodePath<span class=\"token operator\">:</span> <span class=\"token builtin\">string</span><span class=\"token punctuation\">)</span><span class=\"token operator\">:</span> <span class=\"token maybe-class-name\">NodeConfig</span> <span class=\"token operator\">|</span> <span class=\"token keyword null nil\">null</span>\n  <span class=\"token function\">resolveConfig</span><span class=\"token punctuation\">(</span>nodePath<span class=\"token operator\">:</span> <span class=\"token builtin\">string</span><span class=\"token punctuation\">)</span><span class=\"token operator\">:</span> <span class=\"token maybe-class-name\">NodeConfig</span>\n  <span class=\"token function\">createFromDefaults</span><span class=\"token punctuation\">(</span>nodePath<span class=\"token operator\">:</span> <span class=\"token builtin\">string</span><span class=\"token punctuation\">)</span><span class=\"token operator\">:</span> <span class=\"token maybe-class-name\">NodeConfig</span>\n  <span class=\"token function\">updateConfigSchema</span><span class=\"token punctuation\">(</span>nodePath<span class=\"token operator\">:</span> <span class=\"token builtin\">string</span><span class=\"token punctuation\">,</span> newSchema<span class=\"token operator\">:</span> <span class=\"token builtin\">string</span><span class=\"token punctuation\">)</span><span class=\"token operator\">:</span> <span class=\"token keyword\">void</span>\n  <span class=\"token function\">validateConfig</span><span class=\"token punctuation\">(</span>config<span class=\"token operator\">:</span> <span class=\"token maybe-class-name\">NodeConfig</span><span class=\"token punctuation\">)</span><span class=\"token operator\">:</span> <span class=\"token maybe-class-name\">ValidationResult</span>\n<span class=\"token punctuation\">}</span>\n</code></pre>\n<h3 id=\"service-vs-node-config\">Service vs Node Config<a aria-hidden=\"true\" class=\"anchor-heading icon-link\" href=\"#service-vs-node-config\"></a></h3>\n<ul>\n<li><strong>Service config</strong>: API endpoints, auth, global policies</li>\n<li><strong>Node config</strong>: Weave behavior, validation rules, local settings</li>\n<li><strong>Clear separation</strong>: Different storage, lifecycle, and scope</li>\n</ul>\n<h2 id=\"key-benefits\">Key Benefits<a aria-hidden=\"true\" class=\"anchor-heading icon-link\" href=\"#key-benefits\"></a></h2>\n<h3 id=\"predictability\">Predictability<a aria-hidden=\"true\" class=\"anchor-heading icon-link\" href=\"#predictability\"></a></h3>\n<ul>\n<li>No complex inheritance chains</li>\n<li>Clear resolution rules</li>\n<li>System-guaranteed validity</li>\n</ul>\n<h3 id=\"flexibility\">Flexibility<a aria-hidden=\"true\" class=\"anchor-heading icon-link\" href=\"#flexibility\"></a></h3>\n<ul>\n<li>Granular per-node control</li>\n<li>Interactive import decisions</li>\n<li>Targeted update operations</li>\n</ul>\n<h3 id=\"maintainability\">Maintainability<a aria-hidden=\"true\" class=\"anchor-heading icon-link\" href=\"#maintainability\"></a></h3>\n<ul>\n<li>Separate concerns (config vs metadata)</li>\n<li>Schema evolution support</li>\n<li>Backward compatibility</li>\n</ul>\n<h2 id=\"operational-workflows\">Operational Workflows<a aria-hidden=\"true\" class=\"anchor-heading icon-link\" href=\"#operational-workflows\"></a></h2>\n<h3 id=\"new-node-creation\">New Node Creation<a aria-hidden=\"true\" class=\"anchor-heading icon-link\" href=\"#new-node-creation\"></a></h3>\n<ol>\n<li>System generates default config from hierarchy</li>\n<li>Creates <code>_config-component</code> with resolved settings</li>\n<li>Config immediately available and valid</li>\n</ol>\n<h3 id=\"config-updates\">Config Updates<a aria-hidden=\"true\" class=\"anchor-heading icon-link\" href=\"#config-updates\"></a></h3>\n<ol>\n<li>Modify <code>_next</code> layer in <code>_config-component</code></li>\n<li>Validate against current schema</li>\n<li>Weave operation promotes to <code>_current</code></li>\n</ol>\n<h3 id=\"schema-migration\">Schema Migration<a aria-hidden=\"true\" class=\"anchor-heading icon-link\" href=\"#schema-migration\"></a></h3>\n<ol>\n<li><code>flow update</code> identifies outdated configs</li>\n<li>Walks defaults for missing/new required fields</li>\n<li>Updates <code>schemaVersion</code> and validates</li>\n<li>Preserves existing valid settings</li>\n</ol>\n<hr>\n<strong>Children</strong>\n<ol>\n<li><a href=\"/sflo/notes/config-inheritance-resolution\">Config Inheritance Resolution</a></li>\n</ol>\n<hr>\n<strong>Backlinks</strong>\n<ul>\n<li><a href=\"/sflo/notes/pqjdlyd8g80x3yr9o3p82mj\">node config</a></li>\n<li><a href=\"/sflo/notes/rc1wsoryoff9ffxb8wwbf9p\">user resource facet</a></li>\n<li><a href=\"/sflo/notes/o2926clbf63vi9kln79kapg\">handle</a></li>\n<li><a href=\"/sflo/notes/hfmgd0w82phfjkre3ippnk9\">config flow folder</a></li>\n<li><a href=\"/sflo/notes/config-inheritance-resolution\">Config Inheritance Resolution</a></li>\n</ul>","noteIndex":{"id":"voy7zrf0f6bs86m02uadhaf","title":"Semantic Flow Documentation","desc":"","updated":1755716140409,"created":1755709990079,"custom":{"nav_order":0,"permalink":"/"},"fname":"root","type":"note","vault":{"fsPath":"documentation","selfContained":false,"name":"sflo"},"contentHash":"a85a894fbaf533039f790504720f1a89","links":[{"type":"wiki","from":{"fname":"root","id":"voy7zrf0f6bs86m02uadhaf","vaultName":"sflo"},"value":"now","position":{"start":{"line":4,"column":1,"offset":107},"end":{"line":4,"column":8,"offset":114},"indent":[]},"xvault":false,"sameFile":false,"to":{"fname":"now"}},{"type":"wiki","from":{"fname":"root","id":"voy7zrf0f6bs86m02uadhaf","vaultName":"sflo"},"value":"todo","position":{"start":{"line":4,"column":11,"offset":117},"end":{"line":4,"column":19,"offset":125},"indent":[]},"xvault":false,"sameFile":false,"to":{"fname":"todo"}},{"type":"wiki","from":{"fname":"root","id":"voy7zrf0f6bs86m02uadhaf","vaultName":"sflo"},"value":"principle","position":{"start":{"line":4,"column":22,"offset":128},"end":{"line":4,"column":35,"offset":141},"indent":[]},"xvault":false,"sameFile":false,"to":{"fname":"principle"}},{"type":"wiki","from":{"fname":"root","id":"voy7zrf0f6bs86m02uadhaf","vaultName":"sflo"},"value":"contributor.djradon.dev-log","position":{"start":{"line":4,"column":38,"offset":144},"end":{"line":4,"column":69,"offset":175},"indent":[]},"xvault":false,"sameFile":false,"to":{"fname":"contributor.djradon.dev-log"}},{"type":"wiki","from":{"fname":"root","id":"voy7zrf0f6bs86m02uadhaf","vaultName":"sflo"},"value":"sflo.concept.mesh-repo","position":{"start":{"line":10,"column":1,"offset":493},"end":{"line":10,"column":27,"offset":519},"indent":[]},"xvault":false,"sameFile":false,"to":{"fname":"sflo.concept.mesh-repo"}},{"type":"wiki","from":{"fname":"root","id":"voy7zrf0f6bs86m02uadhaf","vaultName":"sflo"},"value":"sflo.concept.mesh","alias":"Semantic Meshes","position":{"start":{"line":10,"column":45,"offset":537},"end":{"line":10,"column":82,"offset":574},"indent":[]},"xvault":false,"sameFile":false,"to":{"fname":"sflo.concept.mesh"}},{"type":"wiki","from":{"fname":"root","id":"voy7zrf0f6bs86m02uadhaf","vaultName":"sflo"},"value":"sflo.concept.semantic-site","alias":"semantic sites","position":{"start":{"line":10,"column":131,"offset":623},"end":{"line":10,"column":176,"offset":668},"indent":[]},"xvault":false,"sameFile":false,"to":{"fname":"sflo.concept.semantic-site"}},{"type":"wiki","from":{"fname":"root","id":"voy7zrf0f6bs86m02uadhaf","vaultName":"sflo"},"value":"feature","position":{"start":{"line":23,"column":7,"offset":1082},"end":{"line":23,"column":18,"offset":1093},"indent":[]},"xvault":false,"sameFile":false,"to":{"fname":"feature"}}],"anchors":{"what-is-semantic-flow":{"type":"header","text":"What Is Semantic Flow?","value":"what-is-semantic-flow","line":12,"column":0,"depth":2},"benefits":{"type":"header","text":"Benefits","value":"benefits","line":18,"column":0,"depth":2},"features":{"type":"header","text":"Features","value":"features","line":25,"column":0,"depth":2}},"children":["p0vd6xnshcxw14ztkglxyxn","sg6tqgoz8cwwmpt0a0r8783","faq000","ggle3sz2jv3vf53t9qplrzo","yxn5rsqsv2gq4s6wbnxsjsj","l9g8eki3dtir51o4jagac5a","28q7fh05bs691llgv7htxnw","xqjr13fyons9goxv8rjrskj"],"parent":null,"data":{},"body":"\n**Dereferenceable, versioned semantic meshes** will be the foundation for a new era of knowledge graphs.\n\n[[now]] | [[todo]] | [[principle]] | [[contributor.djradon.dev-log]]\n\n## What Is Semantic Flow?\n\n**Semantic Flow** is a framework for managing and publishing resource indicators, knowledge graphs and other semantic data by leveraging GitHub, Gitlab, and other free static hosting services. It enables a **dereferenceable Semantic Web** where every HTTP IRI returns meaningful content.\n\n[[sflo.concept.mesh-repo]] provide storage, [[Semantic Meshes|sflo.concept.mesh]] provide resource management and publishing, and [[semantic sites|sflo.concept.semantic-site]] support data discovery and explainability.\n\n## Benefits\n\n- own your own self-describing data and data schemas\n- complete version history when you want it\n- reliable persistence\n- truly FAIR (Findable, Accessible, Interoperable, and Reusable)\n\n## Features\n\n- seamlessly integrate other data sources anywhere in your mesh\n- generate and customize mini-sites or single-page applications for nodes in your mesh\n- see [[feature]] for a list of planned features"},"collectionChildren":null,"customHeadContent":null,"config":{"version":5,"dev":{"enablePreviewV2":true,"enableSelfContainedVaults":true},"commands":{"lookup":{"note":{"selectionMode":"none","confirmVaultOnCreate":true,"vaultSelectionModeOnCreate":"smart","leaveTrace":false,"bubbleUpCreateNew":true,"fuzzThreshold":0.2}},"randomNote":{},"insertNoteLink":{"aliasMode":"selection","enableMultiSelect":false},"insertNoteIndex":{"enableMarker":false},"copyNoteLink":{"aliasMode":"title"},"templateHierarchy":"template"},"workspace":{"vaults":[{"fsPath":"documentation","selfContained":false,"name":"sflo"}],"journal":{"dailyDomain":"daily","name":"journal","dateFormat":"y.MM.dd","addBehavior":"childOfDomain"},"scratch":{"name":"scratch","dateFormat":"y.MM.dd.HHmmss","addBehavior":"asOwnDomain"},"task":{"name":"task","dateFormat":"y.MM.dd","addBehavior":"asOwnDomain","statusSymbols":{"":" ","wip":"w","done":"x","assigned":"a","moved":"m","blocked":"b","delegated":"l","dropped":"d","pending":"y"},"taskCompleteStatus":["done","x"],"prioritySymbols":{"H":"high","M":"medium","L":"low"},"todoIntegration":false,"createTaskSelectionType":"selection2link"},"graph":{"zoomSpeed":1,"createStub":false},"enableAutoCreateOnDefinition":false,"enableXVaultWikiLink":false,"enableRemoteVaultInit":true,"enableUserTags":true,"enableHashTags":true,"workspaceVaultSyncMode":"noCommit","enableAutoFoldFrontmatter":false,"enableEditorDecorations":true,"maxPreviewsCached":10,"maxNoteLength":204800,"enableFullHierarchyNoteTitle":false,"enablePersistentHistory":false},"preview":{"enableFMTitle":true,"enableNoteTitleForLink":true,"enableFrontmatterTags":true,"enableHashesForFMTags":false,"enablePrettyRefs":true,"enableKatex":true,"automaticallyShowPreview":false},"publishing":{"enableFMTitle":true,"enableNoteTitleForLink":true,"enablePrettyRefs":true,"enableKatex":true,"copyAssets":true,"siteHierarchies":["root"],"writeStubs":false,"siteRootDir":"docs","seo":{"title":"Semantic Flow Documentation","description":"A dendron-based wiki for sflo"},"github":{"enableEditLink":true,"editLinkText":"Edit this page on GitHub","editBranch":"main","editViewMode":"tree"},"enableSiteLastModified":true,"enableFrontmatterTags":true,"enableHashesForFMTags":false,"enableRandomlyColoredTags":true,"enableTaskNotes":true,"enablePrettyLinks":true,"searchMode":"search","siteUrl":"https://semantic-flow.github.io/sflo","assetsPrefix":"/sflo","siteFaviconPath":"favicon.ico","siteIndex":"root"}}},"__N_SSG":true}